todo
----

- corriger le problème graphic sync incorrecte parce que la taille n'est pas disponible la première fois

- revoir le traitement des messages get (cf watch)
- revoir la gestion de iappl::oscdebug -> static ?
[ok] IObject messages click et select -> deprecated
- setDispRange -> unused & remove
- implémenter un message watch-

[ok] vérifier l'adressage de la font guido -> pb en 10.5 apparement lié au système
[ok] idée d'intégrer des objets faust (svg)
[ok] support type 'svg' en + de 'svgf'
[ok] spécifier les lignes en width angle
[ok] faire du mapping incrémental
- mappings : support de coordonnées relatives pour les images
- export vidéo
[ok] paramétrages des événements (x, y, date...)
- tutorial pour les mappings
- implémentation du format xml

- voir updateObjectSize résiduel dans IMappingUpdater::VStretch  (inséré pour gestion des boucles 
  de synchronization et actuellement commenté) + réimplémenter les méthodes getWidth et getHeight pour les objets concernés
- objets esclaves dragables dans le temps de leur maître
[ok] - voir .icns dans packaging : copie dans Resources + modif info.plist
- restructurer le positionnement des 'get' handlers
- voir pb d'ordre dans la sauvegarde des fichiers interlude entre type graph et type signal
[ok] voir pb d'encodage de texte sous windows (accents ne passent as en utf8 ni utf8+BOM)
- voir bug pour les formes sync slave:mapname master dans un fichier interlude (pas d'affichage)
- voir GraphicItemView::updateTo générique pour optimisation
- voir messages color et hsb + type des paramètres de couleur
- voir affichage des mappings en mode sync
[ok] parser les floats en ...e+nn
- voir sync et scene (i.e. retrouver la scene dans les objets master)
- optimiser le rendu de la vue pour l'appel de la méthode update : ne pas recalculer
  des choses telles que le path si seule la couleur a changé (VCurveView)
  idem pour à peu près tous les objets
[ok] commande 'export': exporter tout ce qu'on voit (par exemple le mapping et les noms) ie les enfants d'un item
[ok] voir le parser .interlude pour les signaux: ne reconnait plus les msg sans commande, avec uniquement un float.
[ok] voir le parser .interlude pour la nouvelle syntaxe des msg sync: slave:slaveMap master:masterMap
[ok] le 'get' de /ITL/scene/sync n'est plus à jour avec la nouvelle syntaxe slave:slaveMap master:masterMap.
[ok] le patch interlude:sync ne prend pas en compte la nouvelle syntaxe slave:slaveMap master:masterMap.
[ok] gérer les syncBottom/syncTop dans IMappingUpdater ?
[ok] dans TMapMsgHandler.h, on veut gérer le cas où l'utilisateur passe directement une graphic <-> time map
	-> pour l'instant, on peut pas parce qu'il faudrait retourner le mapping dans l'autre sens, 
	mais avec la future representation 'bi-directionnelle' des mappings, ça se fera facilement.
	! attention ! les IGuidoCode n'utilisent pas le TMapMsgHandler et ont leur propre manière de 
	gérer les msg 'map' donc il faudra penser à régler leur cas
[ok] bug: les messages 'set' dont les parametres sont identiques aux paramtres par défaut de 
	 création de l'objet (ie 0.0 0.0 pour un rectangle) sont ignorés, et donc l'objet n'est pas créé.

- revoir gestion des typeString
- revoir le design des nodes debug
- verif shift/reduce dans ITL parser
- ajouter des objet bpf
- calcul des mappings sur score.xml (?)

[ok] écriture des flotants: forme -3.81878e-24
[ok] vérif forme "/ITL/scene/sync get" (pas de réponse)

[ok] - gestion des interactions (clicks, clavier, temps...)
[ok] revoir les titres des sections dans doc osc messages
[ok] gérer les adresses ip des messages créés par 'load'
[ok] voir parser: regexp dans message de synchronisation /ITL/scene/sync car*
[ok]  + verifier le parsing des formes 'slave:mapname'
[ok] revoir la doc pour les couleurs

[ok] calcul de la synchronisation graphique dans le modèle
[ok] implémenter les nodes virtuelles comme des objets standards
[ok] gestion des regexp dans scene/sync regexp
[ok] rendre les fonctions de 'relation' const
[na] gérer reserved works pour création des objets
[ok] fichier de déclarations de types du mapping pour minimiser les dépendances dans IObject
	 note: dépendances non résolues à cause des iterateurs
[ok] objects debug virtual node message 'name' pour afficher le nom des objets

[ok] gérer le retour (true) des messages 'get'
[ok] gérer l'adresse source des messages
[ok] revoir les messages d'erreur (mode verbose)
[ok] nouvelle impl. des mapping - voir pb du mapping avec sync dans le même cycle
[ok] - gérer plusieurs modèles de couleur (rgb et hsb)
[ok] gérer width and height pour tous les objets
[ok] parser les regexps dans le format ITL
[ok] introduire une méthode constant() pour les signaux


suite réunion 17/18 déc 09
- documentation des mappings guido à mettre dans les mappings
- + doc pageCount
- revoir doc pour signaux (élévation)
- voir conservation de l'histoire des signaux
- voir bug rolled unrolled pour voice2
- voir resize des signaux et conservation des données

- export des ornaments dans musicxml
- verifier export des déplacements (intens)
- patch max ajout dynamique marches harmoniques
- interaction avec les partitions: système de filtre et mode select

approches théoriques:
[ok] spec. time mapping
[ok] définition des formats
- état de l'art notation du geste
- représentation du geste
[ok] synchronisation des objets

objets supportés:
- objets pdf
[ok] objets graphiques vectoriels (svg ?)
- représentation du geste
- représentation du son
- synchronisation des objets

implémentation:
- support documents multi pages
- architecture pour la synchronisation
[ok] implémentation des interactions

divers:
[ok] definir api librairie
	 note: à faire pour les fonctions d'interrogation
- impl. blob external
[ok] experimentations avec signal et wiimote
- textures
[ok] publications appl et sdk + GuidoCalculus
