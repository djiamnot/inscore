
/ITL/scene/* del;

/ITL/scene/o1 set rect 1 1;
/ITL/scene/o1 x 0.2;
/ITL/scene/r1 set rect 0.5 0.5;
/ITL/scene/r1 x -0.2;
/ITL/scene/r1/sr set rect 0.6 0.6;
/ITL/scene/r1/sr color 250 0 0;
/ITL/scene/r1/sr/ssr set rect 0.6 0.6;
/ITL/scene/r1/sr/ssr color 0 0 250;

/ITL/scene/o1 watch mouseEnter ( /ITL/scene/o1 blue 250 );
/ITL/scene/o1 watch mouseLeave ( /ITL/scene/o1 blue 0 );
/ITL/scene/o1 watch mouseMove ( /ITL/scene/o1 dblue -10 );
/ITL/scene/o1 watch mouseUp ( /ITL/scene/o1 red 0 );
/ITL/scene/o1 watch mouseDown ( /ITL/scene/o1 red 250 );

/ITL/scene/o1 set rect 1 1.2;
/ITL/scene/o1 color 200 200 200;
/ITL/scene/o2 set rect 1.2 0.8;
/ITL/scene/o2 color 180 180 180 100;
/ITL/scene/o2 watch mouseDown ( /ITL/scene/txt set txt "o* width" $(/ITL/scene/o* get width));
/ITL/scene/o1 watch mouseDown ( /ITL/scene/txt set txt "o* params" $(/ITL/scene/o* get ));
/ITL/scene/o1 watch mouseDown ( /ITL/log write "x scaled" '$x[100,200]' '$x' );

move = ( /ITL/scene/$self x '$sx',
		/ITL/scene/$self y '$sy');

/ITL/scene/* watch mouseDown (
	/ITL/scene/$self x '$sx',
	/ITL/scene/$self y '$sy');

/ITL/scene/* watch mouseMove $move;

move = ( /ITL/scene x '$sx',
		/ITL/scene y '$sy');
/ITL/scene watch mouseMove $move;

submove = ( /ITL/scene/r1/$self x "$sx",
			/ITL/scene/r1/$self y "$sy");
/ITL/scene/r1/sr watch mouseDown $submove;
/ITL/scene/r1/sr watch mouseMove $submove;
#/ITL/scene/r1/sr watch ;

__END__
/ITL/scene watch mouseDown (
	/ITL/scene/o1 color 0 0 250,
	/ITL/scene/o1 dy -0.1
);

/ITL/scene watch TOTO ( /ITL/scene color grey );
/ITL/scene event TOTO 250 150 150;


__END__
/ITL/scene position absolute;
/ITL/scene/* watch;
/ITL/scene x 0;
/ITL/scene y 0;
/ITL/scene get x y ;
/ITL/scene/r1 scale 1.5;
/ITL/scene/r1 scale 1;
